Testes de Interface do Usu√°rio: Embora o README.md mencione uma boa cobertura de testes, seria interessante adicionar testes espec√≠ficos para a l√≥gica da interface do usu√°rio
     no statsPanel.ts, especialmente as fun√ß√µes de filtragem e formata√ß√£o.
   * Valida√ß√£o de Configura√ß√µes: No config.ts, voc√™ poderia adicionar uma valida√ß√£o mais robusta para as configura√ß√µes do usu√°rio, como garantir que o idleTimeout seja um n√∫mero
     positivo.

‚úÖ FASE 1 - M√≥dulo Core Pomodoro (PomodoroManager) - 2-3 dias [CONCLU√çDO]
   - ‚úÖ Criado PomodoroManager com todas as funcionalidades essenciais
   - ‚úÖ Estados do Pomodoro: INACTIVE, FOCUS, FOCUS_PAUSED, SHORT_BREAK, LONG_BREAK, BREAK_EXTENDED
   - ‚úÖ Controle de timers para foco e pausa
   - ‚úÖ Sistema de detec√ß√£o de atividade e inatividade (pausa autom√°tica ap√≥s 5min)
   - ‚úÖ Auto-start configur√°vel quando detecta atividade de codifica√ß√£o
   - ‚úÖ Extens√£o de tempo de foco (bot√£o "continuar por mais X min")
   - ‚úÖ Integra√ß√£o com banco de dados existente (salva configura√ß√µes e sess√µes)
   - ‚úÖ Sistema de eventos para comunica√ß√£o com outros m√≥dulos
   - ‚úÖ Registros de atividade compat√≠veis com sistema existente
   - ‚úÖ Comandos VSCode b√°sicos: startPomodoroFocus, pausePomodoroSession, stopPomodoroSession
   - ‚úÖ Integra√ß√£o completa com extension.ts (eventos de atividade do usu√°rio)
   - ‚úÖ Localiza√ß√£o PT-BR e EN
   - ‚úÖ Teste de integra√ß√£o b√°sico criado

FASE 2 - Integra√ß√£o com sistema existente - 1-2 dias
FASE 3 - Interface de usu√°rio (modais) - 3-4 dias
FASE 4 - L√≥gica de neg√≥cio e regras - 2-3 dias
FASE 5 - Comandos VSCode - 1-2 dias
FASE 6 - Relat√≥rios e analytics - 2-3 dias
FASE 7 - Testes e qualidade - 1-2 dias// Adicione a funcionalidade de Pomodoro integrada √† extens√£o My Time Trace com os seguintes requisitos completos:

// üöÄ 1. Ativa√ß√£o autom√°tica:
// - O sistema Pomodoro deve ser ativado automaticamente assim que a extens√£o My Time Trace iniciar.
// - Iniciar o controle de tempo de foco assim que for detectada atividade de codifica√ß√£o.
// - Nas configura√ß√µes do Pomodoro, deve haver uma op√ß√£o para **desativar o Pomodoro** caso o desenvolvedor n√£o deseje usar esse recurso.

// üîî 2. Alerta ap√≥s tempo de foco:
// - Ap√≥s 45 minutos consecutivos de codifica√ß√£o ativa (sem mais de 5 minutos de inatividade), exibir um modal com:
//   - Um som breve de aten√ß√£o.
//   - Mudan√ßa visual chamativa (ex: fundo do modal e barra de status em vermelho).
//   - Mensagem: ‚ÄúVoc√™ est√° h√° 45 minutos codando. Recomendamos uma pausa de 15 minutos.‚Äù
// - O modal deve conter:
//   1. Bot√£o ‚ÄúRelaxar agora (15 min)‚Äù
//      - Inicia um cron√¥metro regressivo com fundo amarelo.
//      - Ao final, emitir um bip cont√≠nuo at√© o bot√£o ‚ÄúVoltar a codar‚Äù ser clicado.
//      - Caso o desenvolvedor n√£o volte imediatamente, continuar registrando como **descanso estendido**.
//   2. Bot√£o ‚ÄúContinuar por mais 5 min‚Äù
//      - Adia o alerta por 5 minutos.
//   3. √çcone ‚öôÔ∏è de configura√ß√µes
//      - Abre as configura√ß√µes do Pomodoro.

// ‚öôÔ∏è 3. Configura√ß√µes do Pomodoro:
// - Permitir ajustar:
//   - Tempo de foco (padr√£o: 45 min).
//   - Tempo de descanso (padr√£o: 15 min).
//   - Tempo do bot√£o ‚Äúcontinuar por mais 5 min‚Äù.
//   - **Ativar/Desativar Pomodoro automaticamente** (toggle booleano).
// - Todas as prefer√™ncias devem ser salvas no banco de dados local j√° utilizado pela extens√£o (compat√≠vel com a futura API de sincroniza√ß√£o remota).
// - As prefer√™ncias devem acompanhar o usu√°rio entre diferentes dispositivos.

// ‚è±Ô∏è 4. Regras de controle do tempo de foco:
// - O tempo de foco **pausa automaticamente** se forem detectados **mais de 5 minutos seguidos sem codar**.
// - Se o desenvolvedor voltar a codar **dentro de 5 minutos**, retoma o tempo de foco de onde parou.
// - Se ele voltar **ap√≥s o tempo configurado de descanso exemplo 15 minutos**, o tempo de foco √© **reiniciado do zero**.
// - Clicar no bot√£o ‚ÄúVoltar a codar‚Äù ao fim do descanso tamb√©m reinicia o ciclo de foco.

// üìä 5. Registro de atividades compat√≠vel com sistema atual:
// - Categorizar registros como:
//   - `foco`
//   - `descanso`
//   - `descanso_estendido`
//   - `ocioso`
// - Todos os registros devem conter `timestamp in√≠cio`, `timestamp fim`, `tipo`, e serem salvos no banco j√° usado pela extens√£o.


// üìÖ 6. Relat√≥rios e indicadores:
// - Exibir relat√≥rios filtr√°veis por per√≠odo, ex: de 01/01/2025 a 01/02/2025.
// - Indicadores esperados:
//   - Tempo total focado.
//   - Tempo total de descanso.
//   - Tempo ocioso.
//   - Quantidade de ciclos Pomodoro completos.
// - Esses dados devem estar prontos para visualiza√ß√£o na UI ou exporta√ß√£o via API.

// ‚úÖ Tudo deve estar integrado com a UI e l√≥gica central da extens√£o My Time Trace, mantendo consist√™ncia com os recursos existentes e com o banco de dados j√° implementado.
